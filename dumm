buildscript {
	repositories {
		maven("https://plugins.gradle.org/m2/")
		mavenCentral()
	}

	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61")
	}
}

plugins {
	java
	id("org.springframework.boot") version "2.6.7"
	id("io.spring.dependency-management") version "1.0.15.RELEASE"
	id("com.ewerk.gradle.plugins.querydsl") version "1.0.10"
	idea
	kotlin("kapt") version "1.7.10"
}

group = "com.hurray"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_1_8

configurations {
	compileOnly {
		extendsFrom(configurations.annotationProcessor.get())
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.springframework.boot:spring-boot-starter-mustache")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("org.json:json:20220924")
	implementation("com.googlecode.json-simple","json-simple","1.1.1")
	implementation("com.querydsl:querydsl-jpa:5.0.0")
	annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jpa")
	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
	compileOnly("org.projectlombok:lombok")
	runtimeOnly("com.h2database:h2")
	compile("com.querydsl","querydsl-jpa")
	compile("com.querydsl","querydsl-apt")
	annotationProcessor("org.projectlombok:lombok")
	testImplementation("org.springframework.boot:spring-boot-starter-test")

}



tasks.withType<Test> {
	useJUnitPlatform()
}


idea {
	module {
		val kaptMain = file("build/tmp/source/kapt/main")
		sourceDirs.add(kaptMain)
		generatedSourceDirs.add(kaptMain)
	}
}

querydsl {
	library = "com.querydsl:querydsl-apt:5.0.0:jpa"
	jpa = true
	querydslSourcesDir = "$buildDir/generated/querydsl"
}
